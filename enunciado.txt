These are the features required:

    Be able to create an empty simulation space - an empty 50 x 50 grid;
    Be able to create a robot in a certain position and facing direction;
    Be able to create a dinosaur in a certain position;
    Issue instructions to a robot - a robot can turn left, turn right, move forward, move backwards, and attack;
    A robot attack destroys dinosaurs around it (in front, to the left, to the right or behind);
    The attack does not affect robot facing direction;
    No need to worry about the dinosaurs - dinosaurs don't move;
    Display the simulation's current state;
    Two or more entities (robots or dinosaurs) cannot occupy the same position;
    Attempting to move a robot outside the simulation space is an invalid operation.

General notes:

    This challenge will be extended by you and a Nubank engineer on a different step of the process.
    Please make sure to anonymise your submission by removing your name from file headers and such;
    Feel free to expand your design in writing;
    You will submit the source code for your solution to us as a compressed file containing all the code and possible documentation. Please make sure to not include unnecessary files such as the Git repository, compiled binaries, etc;
    Please do not upload your solution to public repositories in GitHub, BitBucket, etc.

Things we're looking for:

    Immutability;
    Separation of concerns;
    Unit and integration tests;
    API design;
    Error handling.
